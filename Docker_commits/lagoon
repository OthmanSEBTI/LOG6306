,repo_name,sha,message
498,lagoon,87ad714a8ca465af40359788b6ff3efe168b5aa7,refactor: fail builds early for invalid docker-compose files
7867,lagoon,dc0e180615539669ce5ad24b534ec83385b82c79,refactor docker-host: use full lagoon image now
8873,lagoon,2a08bb4361b86099224dda25b4110e818dfde934,refactoring lagoon end2end tasks: - only testing on master not develop anymore - running tests from makefile - using docker-compose overwrites
8970,lagoon,f872a86f1602fa3293fbb38d52874bc2f1ece3ce,Merge remote-tracking branch 'origin/refactor-docker-host'
9009,lagoon,38aad92461e41833cbbed8fc80a5de07f82c0d90,Merge pull request #198 from amazeeio/refactor-docker-host
9021,lagoon,3b4fac34b6de5bae67da208982a3565b0201d53b,refactoring of docker-host - it's now inside the lagoon project - it's built with a real docker image
9223,lagoon,6877050df7a7501f7434630e804b7103cc0621bc,Routes refactoring and env variables: - Split up of templates into individual yaml files per object - create services and routes before pvc and deployments - create custom routes based on .lagoon.yml file - create configmap after routes are created - new `LAGOON_ROUTES` env which contains all routes comma separated - new `LAGOON_ROUTE` env which contains the main route (the first custom one or the first generated one) - Routes System fully tested - better documentation of build-deploy-docker-compose.sh
9635,lagoon,c88079e08ddb41a7c9ccb9e42f858f1a77b4c19a,"refactoring of alpine images: - create an commons alpine image which is used by all alpine images for copying common scripts like entrypoints, docker-sleep, etc. - making sure tests actually work (pushing images to openshift registry) - overall smaller fixes"
9962,lagoon,0cabe3ff9a53745d2fc0c60ba372020c9d5b78f4,"refactoring of docker-images colons in folders create too much issues, moving to subfolders"
10312,lagoon,1b17fc77b0b8e1416e70faccca55082ef6f9c32e,"refactor for creating of projects during deployment - no generation of openshiftRessourceAppName and NAME environment variable anymore, Apps are now named hardcoded within the app yamls - no TAG environment variable anymore, we don't need multiple docker image Tags anymore, they are just latest - no SHORT_NAME anymore as the names are hardcoded in the app yamls - Jekins jobs are just called like the branchname"
10413,lagoon,0c81853baaf0070922ec9e420e9476ebac77367a,refactoring how node-packages are loaded: - using lerna to keep track of versions for all node-packages - using relative paths in services to load node-packages - hack to load node-packages for each service with git cloning the git repo again as we don't have access to the parent directories because of docker context - linking node-packes with yarn link when we run dev modes locally so we have them in realtime within the services - new container (node-packages-lerna) which runs 'yarn run watch' in all node-packages
